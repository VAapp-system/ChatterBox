{
    "response": "CSSには、95項目があります。以下の項目からお選びください。",
    "expectUserResponse": true,
    "conversationToken": "EosDS2o5Tk...",
    "audioResponse": "//NExAARaJ...",
    "ssmlMarkList": [],
    "debugInfo": {
        "sharedDebugInfoList": [],
        "conversationBuilderExecutionEventsList": []
    },
    "conversationBuilderDebugInfo": {
        "eventList": []
    },
    "visualResponse": {
        "visualElementsList": [
            {
                "displayText": {
                    "content": "CSSには、95項目があります。以下の項目からお選びください。"
                }
            },
            {
                "listSelect": {
                    "title": "CSSの検索結果",
                    "subtitle": "",
                    "itemsList": [
                        {
                            "optionInfo": {
                                "key": "CSS background-attachment",
                                "synonymsList": []
                            },
                            "title": "CSS background-attachment",
                            "description": "Method of defining how a background image is attached to a scrollable element. Values include `scroll` (default), `fixed` and `local`."
                        },
                        {
                            "optionInfo": {
                                "key": "background-position-x & background-position-y",
                                "synonymsList": []
                            },
                            "title": "background-position-x & background-position-y",
                            "description": "CSS longhand properties to define x or y positions separately."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS all property",
                                "synonymsList": []
                            },
                            "title": "CSS all property",
                            "description": "A shorthand property for resetting all CSS properties except for `direction` and `unicode-bidi`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Appearance",
                                "synonymsList": []
                            },
                            "title": "CSS Appearance",
                            "description": "The `appearance` property defines how elements (particularly form controls) appear by default. By setting the value to `none` the default appearance can be entirely redefined using other CSS properties."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS @apply rule",
                                "synonymsList": []
                            },
                            "title": "CSS @apply rule",
                            "description": "Allows a set of CSS properties to be applied using a named variable"
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Backdrop Filter",
                                "synonymsList": []
                            },
                            "title": "CSS Backdrop Filter",
                            "description": "Method of applying filter effects (like blur, grayscale or hue) to content/elements below the target element."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS background-blend-mode",
                                "synonymsList": []
                            },
                            "title": "CSS background-blend-mode",
                            "description": "Allows blending between CSS background images, gradients, and colors."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Canvas Drawings",
                                "synonymsList": []
                            },
                            "title": "CSS Canvas Drawings",
                            "description": "Method of using HTML5 Canvas as a background image. Not currently part of any specification."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS caret-color",
                                "synonymsList": []
                            },
                            "title": "CSS caret-color",
                            "description": "The `caret-color` property allows the color to be set of the caret (blinking text insertion pointer) in an editable text area."
                        },
                        {
                            "optionInfo": {
                                "key": "Case-insensitive CSS attribute selectors",
                                "synonymsList": []
                            },
                            "title": "Case-insensitive CSS attribute selectors",
                            "description": "Including an `i` before the `]` in a CSS attribute selector causes the attribute value to be matched in an ASCII-case-insensitive manner. For example, `[b=\"xyz\" i]` would match both `<a b=\"xyz\">` and `<a b=\"XYZ\">`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS color-adjust",
                                "synonymsList": []
                            },
                            "title": "CSS color-adjust",
                            "description": "The `color-adjust` (or `-webkit-print-color-adjust` as prefixed in WebKit/Blink browsers) property is a non-standard CSS extension that can be used to force printing of background colors and images."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Conical Gradients",
                                "synonymsList": []
                            },
                            "title": "CSS Conical Gradients",
                            "description": "Method of defining a conical or repeating conical color gradient as a CSS image."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Containment",
                                "synonymsList": []
                            },
                            "title": "CSS Containment",
                            "description": "The CSS `contain` property lets developers limit the scope of the browser's styles, layout and paint work for faster and more efficient rendering."
                        },
                        {
                            "optionInfo": {
                                "key": "Crisp edges/pixelated images",
                                "synonymsList": []
                            },
                            "title": "Crisp edges/pixelated images",
                            "description": "Scales images with an algorithm that preserves edges and contrast, without smoothing colors or introducing blur. This is intended for images such as pixel art. Official values that accomplish this for the `image-rendering` property are `crisp-edges` and `pixelated`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Cross-Fade Function",
                                "synonymsList": []
                            },
                            "title": "CSS Cross-Fade Function",
                            "description": "Image function to create a \"crossfade\" between images. This allows one image to transition (fade) into another based on a percentage value."
                        },
                        {
                            "optionInfo": {
                                "key": ":default CSS pseudo-class",
                                "synonymsList": []
                            },
                            "title": ":default CSS pseudo-class",
                            "description": "The `:default` pseudo-class matches checkboxes and radio buttons which are checked by default, `<option>`s with the `selected` attribute, and the default submit button (if any) of a form."
                        },
                        {
                            "optionInfo": {
                                "key": "Explicit descendant combinator >>",
                                "synonymsList": []
                            },
                            "title": "Explicit descendant combinator >>",
                            "description": "An explicit, non-whitespace spelling of the descendant combinator. `A >> B` is equivalent to `A B`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Device Adaptation",
                                "synonymsList": []
                            },
                            "title": "CSS Device Adaptation",
                            "description": "A standard way to override the size of viewport in web page using the `@viewport` rule, standardizing and replacing Apple's own popular `<meta>` viewport implementation."
                        },
                        {
                            "optionInfo": {
                                "key": ":dir() CSS pseudo-class",
                                "synonymsList": []
                            },
                            "title": ":dir() CSS pseudo-class",
                            "description": "Matches elements based on their directionality. `:dir(ltr)` matches elements which are Left-to-Right. `:dir(rtl)` matches elements which are Right-to-Left."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS display: contents",
                                "synonymsList": []
                            },
                            "title": "CSS display: contents",
                            "description": "`display: contents` causes an element's children to appear as if they were direct children of the element's parent, ignoring the element itself. This can be useful when a wrapper element should be ignored when using CSS grid or similar layout techniques."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Environment Variables env()",
                                "synonymsList": []
                            },
                            "title": "CSS Environment Variables env()",
                            "description": "Usage of environment variables like `safe-area-inset-top`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Exclusions Level 1",
                                "synonymsList": []
                            },
                            "title": "CSS Exclusions Level 1",
                            "description": "Exclusions defines how inline content flows around elements. It extends the content wrapping ability of floats to any block-level element."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS filter() function",
                                "synonymsList": []
                            },
                            "title": "CSS filter() function",
                            "description": "This function filters a CSS input image with a set of filter functions (like blur, grayscale or hue)"
                        },
                        {
                            "optionInfo": {
                                "key": "CSS Filter Effects",
                                "synonymsList": []
                            },
                            "title": "CSS Filter Effects",
                            "description": "Method of applying filter effects using the `filter` property to elements, matching filters available in SVG. Filter functions include blur, brightness, contrast, drop-shadow, grayscale, hue-rotate, invert, opacity, sepia and saturate."
                        },
                        {
                            "optionInfo": {
                                "key": "::first-letter CSS pseudo-element selector",
                                "synonymsList": []
                            },
                            "title": "::first-letter CSS pseudo-element selector",
                            "description": "CSS pseudo-element that allows styling only the first \"letter\" of text within an element. Useful for implementing initial caps or drop caps styling."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS position:fixed",
                                "synonymsList": []
                            },
                            "title": "CSS position:fixed",
                            "description": "Method of keeping an element in a fixed location regardless of scroll position"
                        },
                        {
                            "optionInfo": {
                                "key": ":focus-visible CSS pseudo-class",
                                "synonymsList": []
                            },
                            "title": ":focus-visible CSS pseudo-class",
                            "description": "The `:focus-visible` pseudo-class applies while an element matches the `:focus` pseudo-class, and the UA determines via heuristics that the focus should be specially indicated on the element (typically via a “focus ring”)."
                        },
                        {
                            "optionInfo": {
                                "key": ":focus-within CSS pseudo-class",
                                "synonymsList": []
                            },
                            "title": ":focus-within CSS pseudo-class",
                            "description": "The `:focus-within` pseudo-class matches elements that either themselves match `:focus` or that have descendants which match `:focus`."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS font-rendering controls",
                                "synonymsList": []
                            },
                            "title": "CSS font-rendering controls",
                            "description": "`@font-face` descriptor (currently defined as `font-display`) that allows control over how a downloadable font renders before it is fully loaded."
                        },
                        {
                            "optionInfo": {
                                "key": "CSS font-stretch",
                                "synonymsList": []
                            },
                            "title": "CSS font-stretch",
                            "description": "If a font has multiple types of variations based on the width of characters, the `font-stretch` property allows the appropriate one to be selected. The property in itself does not cause the browser to stretch to a font."
                        }
                    ]
                }
            }
        ],
        "suggestionsList": [
            {
                "title": "トップ"
            },
            {
                "title": "次頁"
            }
        ],
        "agentLogoUrl": "https://lh3.googleusercontent.com/obz6fvXta6gIVweAJOJDulT7AwKvi6a12_F-ke5mBgtZmvBVyiqGOinbAMhniUQsbtTYUJn42punPQ",
        "agentStyle": {
            "primaryColor": "#333333",
            "fontFamily": "",
            "borderRadius": 0,
            "backgroundColor": "#faf9f3"
        }
    },
    "clientError": 0,
    "is3pResponse": true,
    "clientOperationList": [
        {
            "operationType": 8,
            "showSuggestionsPayLoad": {
                "textsList": [
                    "トップ",
                    "次頁"
                ]
            }
        },
        {
            "operationType": 1,
            "micUpdatePayLoad": {
                "micMode": 1
            }
        }
    ],
    "projectName": "",
    "renderedHtml": "",
    "previewStartTimeMicros": "",
    "isEmptyResponse": false,
    "agentName": "ブラウザチェッカー",
    "servingModelOutdated": false,
    "request": "トップ"
}